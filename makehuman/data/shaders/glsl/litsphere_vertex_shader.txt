#version 110

/**
 * Lit Sphere (spherically mapped captured light) shader.
 *
 **Project Name:**      MakeHuman
 *
 **Product Home Page:** http://www.makehuman.org/
 *
 **Code Home Page:**    http://code.google.com/p/makehuman/
 *
 **Authors:**           Jonas Hauquier
 *
 **Copyright(c):**      MakeHuman Team 2001-2013
 *
 **Licensing:**         AGPL3 (see also http://www.makehuman.org/node/318)
 *
 **Coding Standards:**  See http://www.makehuman.org/node/165
 *
 * Abstract
 * --------
 *
 * Has the effect of a specular material, shaded relative to the camera without
 * lights.
 * The normal is used as UV coordinates of the litsphere texture, which is a
 * spherically shaped mapping of colors for all angles that normals can face in
 * the half sphere facing the camera.
**/

// Output
varying vec3 vNormal;

#ifdef NORMALMAP
    // Inputs
    attribute vec4 tangent;

    // Output: Tangent-space vector
    varying vec3 tNormVec;
#endif

void main() {
    gl_Position = ftransform();
    gl_TexCoord[0] = gl_MultiTexCoord0;
    vNormal  = normalize(gl_NormalMatrix * gl_Normal);

    #ifdef DIFFUSE
        gl_TexCoord[0] = gl_MultiTexCoord0;
    #endif

    #ifdef NORMALMAP
        vec3 tang = normalize(gl_NormalMatrix * tangent.xyz);
        //normal = normalize(gl_NormalMatrix * gl_Normal);
        vec3 binormal = normalize(cross(vNormal, tang)) * -tangent.w;

        mat3 tangMat = mat3(tang, binormal, vNormal);
        tNormVec = normalize(vec3(1.0) * tangMat);
    #endif

    #ifdef VERTEX_COLOR
        gl_FrontColor = gl_Color;
    #endif
}
